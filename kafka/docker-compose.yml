version: '3.4'

services:
  zookeeper1:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper1
    hostname: zookeeper1
    restart: unless-stopped
    networks:
      - iotnet
    volumes:
      - ../data/kafka/zookeeper:/bitnami/zookeeper
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=0.0.0.0:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
      - ZOO_PORT_NUMBER=2181
      - ZOO_TICK_TIME=2000
      - ZOO_INIT_LIMIT=10
      - ZOO_SYNC_LIMIT=5
      - ZOO_MAX_CLIENT_CNXNS=60
      - ZOO_HEAP_SIZE=1024
      - ZOO_AUTOPURGE_PURGEINTERVAL=72
      - ZOO_AUTOPURGE_SNAPRETAINCOUNT=2
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-1:
    image: 'bitnami/kafka:latest'
    container_name: kafka-1
    hostname: kafka-1
    restart: unless-stopped
    networks:
      - iotnet
    ports:
      - '19093:19093'
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:19093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-1:9092,EXTERNAL://localhost:19093
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_NUM_PARTITIONS=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_HEAP_OPTS=-Xmx1024m -Xms1024m
    volumes:
      - ../data/kafka:/bitnami/kafka
    depends_on:
      - zookeeper1

  kafka-2:
    image: 'bitnami/kafka:latest'
    container_name: kafka-2
    hostname: kafka-2
    restart: unless-stopped
    networks:
      - iotnet
    ports:
      - '29093:29093'
    environment:
      - KAFKA_CFG_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-2:9092,EXTERNAL://localhost:29093
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_NUM_PARTITIONS=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_HEAP_OPTS=-Xmx1024m -Xms1024m
    volumes:
      - ../data/kafka:/bitnami/kafka
    depends_on:
      - zookeeper1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.0
    hostname: schema-registry
    container_name: schema-registry
    restart: unless-stopped
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    networks: 
      - iotnet
    ports:
      - "8091:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-1:9092,kafka-2:9092,kafka-3:9092'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8091


  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:7.0.0
    container_name: kafka-rest-proxy
    restart: unless-stopped
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry
    networks: 
      - iotnet
    ports:
      - 8092:8082
    hostname: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka-1:9092,kafka-2:9092,kafka-3:9092'
      KAFKA_REST_LISTENERS: "http://kafka-rest-proxy:8092"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8091'

  kafka-ui:
    image: 'obsidiandynamics/kafdrop'
    container_name: 'kafka-ui'
    restart: unless-stopped
    environment:
      - KAFKA_BROKERCONNECT=kafka-1:9092,kafka-2:9092,kafka-3:9092
      - SERVER_PORT=8080
    networks:
      - iotnet
    ports:
      - "8085:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - zookeeper1
      - zookeeper2

networks:
  iotnet:
    external: true
    name: ${DOCKER_NETWORK:-iot_net}